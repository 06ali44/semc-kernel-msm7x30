#!/bin/bash
TOPDIR=$(cd $(dirname "$0"); pwd)
HOME=$TOPDIR/..
TOOLS_DIR=$HOME/scripts/tools
PRM=$TOPDIR/ramdisk_iyokan

STRIP=$HOME/toolchains/arm-eabi-linaro-4.7.2/bin/arm-eabi-strip
MKBOOTFS=$TOOLS_DIR/mkbootfs
MKBOOTIMG=$TOOLS_DIR/mkbootimg


echo "Cleaning from previous build.."
echo
# remove previous
rm -rf $PRM/ramdisk.cpio.lzma
rm -f $PRM/zImage
rm -f $PRM/boot.img
rm -f $PRM/ramdisk/sbin/*~
rm -f $PRM/ramdisk/sbin/*.bz2
rm -f $PRM/ramdisk/sbin/*.lzma
rm $PRM/ramdisk/init
rm -rf $PRM/ramdisk/res/modules

# link init every build
cd $PRM/ramdisk
ln -s /sbin/init.sh init
cd ..

mkdir $PRM/ramdisk/res/modules

echo
echo "Creating boot.img, standby..."

# copy modules
cp $TOPDIR/net/compat-wireless/drivers/net/wireless/wl12xx/wl12xx.ko $PRM/ramdisk/res/modules
cp $TOPDIR/net/compat-wireless/drivers/net/wireless/wl12xx/wl12xx_sdio.ko $PRM/ramdisk/res/modules
cp $TOPDIR/drivers/usb/storage/usb-storage.ko $PRM/ramdisk/res/usb_otg
cp $TOPDIR/fs/fuse/fuse.ko $PRM/ramdisk/res/usb_otg
cp $TOPDIR/fs/ntfs/ntfs.ko $PRM/ramdisk/res/usb_otg
cp $TOPDIR/drivers/char/frandom.ko $PRM/ramdisk/res/frandom
cp $TOPDIR/fs/cifs/cifs.ko $PRM/ramdisk/res/cifs
cp $TOPDIR/crypto/md4.ko $PRM/ramdisk/res/cifs
cp $TOPDIR/fs/nls/nls_utf8.ko $PRM/ramdisk/res/cifs


# strip modules
$STRIP --strip-unneeded $PRM/ramdisk/res/cifs/*.ko
$STRIP --strip-unneeded $PRM/ramdisk/res/frandom/*.ko
$STRIP --strip-unneeded $PRM/ramdisk/res/usb_otg/*.ko
$STRIP --strip-unneeded $PRM/ramdisk/res/modules/*.ko


# make cpios
$MKBOOTFS $PRM/ramdisk-cpio > $PRM/ramdisk/sbin/ramdisk.cpio
$MKBOOTFS $PRM/ramdisk-jbft-cpio > $PRM/ramdisk/sbin/ramdisk-jbft.cpio
$MKBOOTFS $PRM/ramdisk-twrp-cpio > $PRM/ramdisk/sbin/ramdisk-twrp.cpio
$MKBOOTFS $PRM/ramdisk-cwm-cpio > $PRM/ramdisk/sbin/ramdisk-cwm.cpio

# compress cpios using lzma on RD's
lzma $PRM/ramdisk/sbin/ramdisk-cwm.cpio 
lzma $PRM/ramdisk/sbin/ramdisk.cpio
lzma $PRM/ramdisk/sbin/ramdisk-jbft.cpio
lzma $PRM/ramdisk/sbin/ramdisk-twrp.cpio

# compress ramdisk
$MKBOOTFS $PRM/ramdisk | lzma > $PRM/ramdisk.cpio.lzma

# copy zImage
cp $HOME/kernel/arch/arm/boot/zImage $PRM

# make boot.img
cd $PRM
$MKBOOTIMG --base 0x00200000 --pagesize 131072 --kernel zImage --ramdisk ramdisk.cpio.lzma -o boot.img
echo
echo "[i] ...done."
